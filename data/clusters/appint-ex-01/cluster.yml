---
$schema: /openshift/cluster-1.yml

labels: {}

name: appint-ex-01
description: Example app-interface cluster
consoleUrl: ''
kibanaUrl: ''
prometheusUrl: ''
alertmanagerUrl: ''
serverUrl: 'https://api.cluster.com'
elbFQDN: ''

spec:
  provider: aws
  region: us-east-1
  version: ''
  initial_version: ''
  multi_az: true
  instance_type: ''
  private: true
  storage: 1
  load_balancers: 0
  nodes: 0
  channel: candidate

network:
  type: OpenShiftSDN
  vpc: 10.122.0.0/16
  service: 172.30.0.0/16
  pod: 10.128.0.0/14

ocm:
  $ref: /ocm/api.openshift.com.yml

managedGroups:
- dedicated-admins

automationToken:
  path: creds/kube-configs/appint-ex-01
  field: token

# Give user group defined by admin.yml the option
# to obtain read or network-mgmt access in the AWS
# account of the OSD cluster.
awsInfrastructureAccess:
- awsGroup:
    $ref: /aws/app-int-example-01/groups/admin.yml
  accessLevel: read-only
- awsGroup:
    $ref: /aws/app-int-example-01/groups/admin.yml
  accessLevel: network-mgmt

# This is required to give the terraform user
# network-mgmt permissions to do automated
# peering.
awsInfrastructureManagementAccounts:
- account:
    $ref: /aws/app-int-example-01/account.yml
  accessLevel: network-mgmt
  default: true

peering:
  connections:
  - provider: account-vpc-mesh
    name: appint-ex-01_app-int-example-01_mesh
    account:
      $ref: /aws/app-int-example-01/account.yml
    tags:
      # Make sure your VPC has this tag -> this is used as a filter!
      Name: app-interface-development
    manageRoutes: true

internal: false
